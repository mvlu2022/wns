Create a basic MANET implementation simulation for Packet animation and Packet Trace.
Steps for practical:
1. Then open inet/examples/
2. Right click on manetrouting -create new folder as MobileNet.
3. Right click on your newly created folder and select NED file. Give name as Net1.
select new adhoc mobility wireless network wizard

(remember when you got error then (&quot;p=60,50&quot;);=> "p=60,50"
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as published
by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
// GNU Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public License
// along with this program. If not, see http://www.gnu.org/licenses/.
//
package inet.examples.manetrouting.mymanet;
// numOfHosts: 10
// parametric: true
// static: false
import inet.networklayer.autorouting.ipv4.IPv4NetworkConfigurator;
import inet.nodes.inet.AdhocHost;
import inet.world.radio.ChannelControl;
network Net1
{
parameters:
int numHosts;
submodules:
host[numHosts]: AdhocHost
{
parameters:
@display(&quot;r=,,#707070&quot;);
}
channelControl: ChannelControl
{
parameters:
@display(&quot;p=60,50&quot;);
}
configurator: IPv4NetworkConfigurator

{
@display(&quot;p=140,50&quot;);
}
}

a file omnetpp.ini will be created with the following code
[General]
network = Net1
#record-eventlog = true
#eventlog-message-detail-pattern = *:(not declaredOn(cMessage) and not
declaredOn(cNamedObject) and not declaredOn(cObject))
*.numHosts = 10
num-rngs = 3
**.mobility.rng-0 = 1
**.wlan[*].mac.rng-0 = 2
#debug-on-errors = true
tkenv-plugin-path = ../../../etc/plugins
**.channelNumber = 0
# channel physical parameters
*.channelControl.carrierFrequency = 2.4GHz
*.channelControl.pMax = 2.0mW
*.channelControl.sat = -110dBm
*.channelControl.alpha = 2
*.channelControl.numChannels = 1
# mobility
**.host[*].mobilityType = &quot;MassMobility&quot;
**.mobility.constraintAreaMinZ = 0m
**.mobility.constraintAreaMaxZ = 0m
**.mobility.constraintAreaMinX = 0m
**.mobility.constraintAreaMinY = 0m
**.mobility.constraintAreaMaxX = 600m
**.mobility.constraintAreaMaxY = 400m
**.mobility.changeInterval = truncnormal(2s, 0.5s)
**.mobility.changeAngleBy = normal(0deg, 30deg)
**.mobility.speed = truncnormal(20mps, 8mps)
**.mobility.updateInterval = 100ms
# ping app (host[0] pinged by others)
*.host[0].pingApp[0].destAddr = &quot;&quot;
*.host[*].numPingApps = 1
*.host[*].pingApp[0].destAddr = &quot;host[0]&quot;
*.host[*].pingApp[0].startTime = uniform(1s,5s)
*.host[*].pingApp[0].printPing = true
# nic settings
**.wlan[*].bitrate = 2Mbps
**.wlan[*].mgmt.frameCapacity = 10

**.wlan[*].mac.address = &quot;auto&quot;
**.wlan[*].mac.maxQueueSize = 14
**.wlan[*].mac.rtsThresholdBytes = 3000B
**.wlan[*].mac.retryLimit = 7
**.wlan[*].mac.cwMinData = 7
**.wlan[*].mac.cwMinMulticast = 31
**.wlan[*].radio.transmitterPower = 2mW
**.wlan[*].radio.thermalNoise = -110dBm
**.wlan[*].radio.sensitivity = -85dBm
**.wlan[*].radio.pathLossAlpha = 2
**.wlan[*].radio.snirThreshold = 4dB

right click on ned file and run it as omnetpp simulation
